<!-- livebook:{"persist_outputs":true} -->

# SVG ECAM Gauge

```elixir
Mix.install([
  {:kino, "~> 0.14.2"}
])
```

## Section

```elixir
gauge_min = 0
gauge_max = 50
gauge_value = 27.5
cx = 150  # Center X
cy = 150  # Center Y
r_inner = 90  # Inner tick radius
r_outer = 100  # Outer tick radius
tick_count = 5  # Number of major ticks
tick_gap = 180 / (tick_count - 1)  # Degrees per tick

ticks =
  for i <- 0..(tick_count - 1) do
    theta = :math.pi() * (i * tick_gap) / 180  # Convert to radians

    x1 = cx + r_inner * :math.cos(theta)
    y1 = cy - r_inner * :math.sin(theta)

    x2 = cx + r_outer * :math.cos(theta)
    y2 = cy - r_outer * :math.sin(theta)

    ~s(<line x1="#{x1}" y1="#{y1}" x2="#{x2}" y2="#{y2}" stroke="grey" stroke-width="3"/>)
  end

svg_ticks = Enum.join(ticks, "\n")  # Join lines for SVG output
```

<!-- livebook:{"output":true} -->

```
"<line x1=\"240.0\" y1=\"150.0\" x2=\"250.0\" y2=\"150.0\" stroke=\"grey\" stroke-width=\"3\"/>\n<line x1=\"213.63961030678928\" y1=\"86.36038969321072\" x2=\"220.71067811865476\" y2=\"79.28932188134526\" stroke=\"grey\" stroke-width=\"3\"/>\n<line x1=\"150.0\" y1=\"60.0\" x2=\"150.0\" y2=\"50.0\" stroke=\"grey\" stroke-width=\"3\"/>\n<line x1=\"86.36038969321072\" y1=\"86.36038969321072\" x2=\"79.28932188134526\" y2=\"79.28932188134524\" stroke=\"grey\" stroke-width=\"3\"/>\n<line x1=\"60.0\" y1=\"150.0\" x2=\"50.0\" y2=\"150.0\" stroke=\"grey\" stroke-width=\"3\"/>"
```

```elixir
number_count = 4  # Number of major ticks
number_gap = 180 / (number_count - 1)  # Degrees per tick
r_text = r_inner - 20 # bring in the numbers a bit
numbers =
  for i <- 0..(number_count - 1) do
    theta = :math.pi() * (i * number_gap) / 180  # Convert to radians

    x = cx + r_text * :math.cos(theta)
    y = cy - r_text * :math.sin(theta)

    gauge_range = gauge_max - gauge_min
    number = gauge_max - (gauge_range / (number_count - 1)) * i
    number = Float.round(number, 1)


    ~s(<text class="number" x="#{x}" y="#{y}" fill="blue">#{number}</text>)
  end
svg_numbers = Enum.join(numbers, "\n")
```

<!-- livebook:{"output":true} -->

```
"<text class=\"number\" x=\"220.0\" y=\"150.0\" fill=\"blue\">50.0</text>\n<text class=\"number\" x=\"185.0\" y=\"89.3782217350893\" fill=\"blue\">33.3</text>\n<text class=\"number\" x=\"115.00000000000001\" y=\"89.37822173508928\" fill=\"blue\">16.7</text>\n<text class=\"number\" x=\"80.0\" y=\"150.0\" fill=\"blue\">0.0</text>"
```

```elixir
# calculate the needle angle 

scale_to_angle = fn (value, gauge_min, gauge_max) ->
  -90 + ((value - gauge_min) * 180 / (gauge_max - gauge_min))
end

gauge_angle = scale_to_angle.(gauge_value, gauge_min, gauge_max)
```

<!-- livebook:{"output":true} -->

```
9.0
```

```elixir
svg = ~s"""
<svg width="300" height="200" viewBox="0 0 300 200" xmlns="http://www.w3.org/2000/svg">
    <style>
      .number {
        font: normal 14px monospace; 
      }
      .display {
        font: bold 18px monospace;
      }
    </style>
    <!-- White Arc -->
    <path d="M50,150 A100,100 0 0,1 246,120" stroke="grey" stroke-width="6" fill="none"/>
    
    <!-- Red Arc -->
    <path d="M246,120 A100,100 0 0,1 250,150" stroke="red" stroke-width="6" fill="none"/>

    <!-- Tick Marks -->
    #{svg_ticks}

    <!-- Numbers -->
    #{svg_numbers}

    <!-- Indicator Needle -->
    <line x1="150" y1="150" x2="150" y2="50" stroke="lime" stroke-width="3" transform="rotate(#{gauge_angle}, 150, 150)" />
    <circle cx="150" cy="150" r="5" fill="lime"/>

    <!-- Orange Marker for the setpoint -->
    <rect x="190" y="55" width="10" height="20" fill="orange" transform="rotate(30, 195, 65)"/>

    <!-- Digital Display Box -->
    <rect x="100" y="160" width="100" height="40" fill="black" stroke="lime" stroke-width="2"/>
    
    <!-- Digital Text -->
    <text class="display" x="110" y="180" fill="lime" font-weight="bold">AVAIL</text>
    <text class="display" x="150" y="195" fill="lime" font-weight="bold">#{gauge_value}</text>
</svg>
"""

Kino.HTML.new(svg)
```
